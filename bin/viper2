#!/usr/bin/env ruby
# viper - Main entry for Viper editor

require_relative '../lib/viper'

 # setup package search path
Viper::Packages::PACKAGE_PATH.unshift  Viper::Local::VIPER + '/app'

Viper::Packages::PACKAGE_PATH.unshift  Viper::Local::VIPER

 # run bootstrapper
vish_file Viper::Local::VIPER + '/bin/boot.viper'
#This for possible debugging
vish_file('./.viperrc') if File.exist?('./.viperrc')
# implements the mode stack, the last item is the current mode
 mode_stack = ['vedit']

# Main event loop for now TODO: implement in new pkg
say 'ready'
loop do
  begin
    mode = mode_stack[-1] # might be changed by some command
  event = map_key(key_press)
  command = Viper::VFS.path_to_value "/mode/#{mode}/bind/#{event}"
#binding.pry
  puts "binding for #{event} not found" if command.nil?
  vish!command unless command.nil?
  # handle the view portion
  speech = Viper::VFS.path_to_value "/mode/#{mode}/speech/#{event}"
  puts "nothing to say about #{event}" if speech.nil?
  vish! speech unless speech.nil?
  rescue Viper::Commands::GracefulBreak
  end
end
