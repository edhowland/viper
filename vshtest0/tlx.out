0: content: >rem<, type: bare string, line: 1
1: content: >dir<, type: bare string, line: 1
2: content: >commands<, type: bare string, line: 1
3: content: >mkdir<, type: bare string, line: 1
4: content: >rm<, type: bare string, line: 1
5: content: >cp<, type: bare string, line: 1
6: content: >mv<, type: bare string, line: 1
7: content: >
<, type: <new line>, line: 1
8: content: >source<, type: bare string, line: 2
9: content: >asserts.vsh<, type: bare string, line: 2
10: content: >
<, type: <new line>, line: 2
11: content: >mkdir<, type: bare string, line: 3
12: content: >/v/dir<, type: bare string, line: 3
13: content: >
<, type: <new line>, line: 3
14: content: >function<, type: <function keyword>, line: 4
15: content: >test_mkdir_1<, type: bare string, line: 4
16: content: >(<, type: <left paren>, line: 4
17: content: >)<, type: <right paren, line: 4
18: content: >{<, type: <left brace>, line: 4
19: content: >
<, type: <new line>, line: 4
20: content: >mkdir<, type: bare string, line: 5
21: content: >/v/dir/foo_1<, type: bare string, line: 5
22: content: >
<, type: <new line>, line: 5
23: content: >assert_exec<, type: bare string, line: 6
24: content: >{<, type: <left brace>, line: 6
25: content: >test<, type: bare string, line: 6
26: content: >-d<, type: bare string, line: 6
27: content: >/v/dir/foo_1<, type: bare string, line: 6
28: content: >}<, type: <right brace>, line: 6
29: content: >'/v/dir/foo_1 not created'<, type: single quoted string, line: 6
30: content: >
<, type: <new line>, line: 6
31: content: >}<, type: <right brace>, line: 7
32: content: >
<, type: <new line>, line: 7
33: content: >function<, type: <function keyword>, line: 8
34: content: >test_dir_mkdir_many<, type: bare string, line: 8
35: content: >(<, type: <left paren>, line: 8
36: content: >)<, type: <right paren, line: 8
37: content: >{<, type: <left brace>, line: 8
38: content: >
<, type: <new line>, line: 8
39: content: >mkdir<, type: bare string, line: 9
40: content: >/v/dir/mbar<, type: bare string, line: 9
41: content: >/v/dir/mbaz<, type: bare string, line: 9
42: content: >/v/dir/mspam<, type: bare string, line: 9
43: content: >
<, type: <new line>, line: 9
44: content: >for<, type: bare string, line: 10
45: content: >i<, type: bare string, line: 10
46: content: >in<, type: bare string, line: 10
47: content: >/v/dir/mbar<, type: bare string, line: 10
48: content: >/v/dir/mbaz<, type: bare string, line: 10
49: content: >/v/dir/mspam<, type: bare string, line: 10
50: content: >{<, type: <left brace>, line: 10
51: content: >
<, type: <new line>, line: 10
52: content: >assert_exec<, type: bare string, line: 11
53: content: >{<, type: <left brace>, line: 11
54: content: >test<, type: bare string, line: 11
55: content: >-d<, type: bare string, line: 11
56: content: >:<, type: <colon>, line: 11
57: content: >i<, type: bare string, line: 11
58: content: >}<, type: <right brace>, line: 11
59: content: >":{i} not created"<, type: double quoted string, line: 11
60: content: >
<, type: <new line>, line: 11
61: content: >}<, type: <right brace>, line: 12
62: content: >
<, type: <new line>, line: 12
63: content: >}<, type: <right brace>, line: 13
64: content: >
<, type: <new line>, line: 13
65: content: >function<, type: <function keyword>, line: 14
66: content: >test_cp_1<, type: bare string, line: 14
67: content: >(<, type: <left paren>, line: 14
68: content: >)<, type: <right paren, line: 14
69: content: >{<, type: <left brace>, line: 14
70: content: >
<, type: <new line>, line: 14
71: content: >touch<, type: bare string, line: 15
72: content: >/v/dir/cp1.txt<, type: bare string, line: 15
73: content: >
<, type: <new line>, line: 15
74: content: >assert_exec<, type: bare string, line: 16
75: content: >{<, type: <left brace>, line: 16
76: content: >cp<, type: bare string, line: 16
77: content: >/v/dir/cp1.txt<, type: bare string, line: 16
78: content: >/v/dir/_cp1.txt<, type: bare string, line: 16
79: content: >}<, type: <right brace>, line: 16
80: content: >'cp /v/dir/cp1.txt /v/dir/_cp1.txt'<, type: single quoted string, line: 16
81: content: >
<, type: <new line>, line: 16
82: content: >assert_exec<, type: bare string, line: 17
83: content: >{<, type: <left brace>, line: 17
84: content: >test<, type: bare string, line: 17
85: content: >-f<, type: bare string, line: 17
86: content: >/v/dir/cp1.txt<, type: bare string, line: 17
87: content: >&<, type: <ampersand>, line: 17
88: content: >&<, type: <ampersand>, line: 17
89: content: >test<, type: bare string, line: 17
90: content: >-f<, type: bare string, line: 17
91: content: >/v/dir/_cp1.txt<, type: bare string, line: 17
92: content: >}<, type: <right brace>, line: 17
93: content: >'both cp1.txt and _cp1.txt do not exist'<, type: single quoted string, line: 17
94: content: >
<, type: <new line>, line: 17
95: content: >}<, type: <right brace>, line: 18
96: content: >
<, type: <new line>, line: 18
97: content: >function<, type: <function keyword>, line: 19
98: content: >test_dir_cp_many_to_dir<, type: bare string, line: 19
99: content: >(<, type: <left paren>, line: 19
100: content: >)<, type: <right paren, line: 19
101: content: >{<, type: <left brace>, line: 19
102: content: >
<, type: <new line>, line: 19
103: content: >mkdir<, type: bare string, line: 20
104: content: >/v/dir/dest1<, type: bare string, line: 20
105: content: >
<, type: <new line>, line: 20
106: content: >touch<, type: bare string, line: 21
107: content: >/v/dir/cp1.txt<, type: bare string, line: 21
108: content: >/v/dir/cp2.txt<, type: bare string, line: 21
109: content: >
<, type: <new line>, line: 21
110: content: >assert_exec<, type: bare string, line: 22
111: content: >{<, type: <left brace>, line: 22
112: content: >cp<, type: bare string, line: 22
113: content: >/v/dir/cp1.txt<, type: bare string, line: 22
114: content: >/v/dir/cp2.txt<, type: bare string, line: 22
115: content: >/v/dir/dest1<, type: bare string, line: 22
116: content: >}<, type: <right brace>, line: 22
117: content: >'cp cp1.txt cp2.txt to /v/dir/dest1 failed'<, type: single quoted string, line: 22
118: content: >
<, type: <new line>, line: 22
119: content: >assert_exec<, type: bare string, line: 23
120: content: >{<, type: <left brace>, line: 23
121: content: >test<, type: bare string, line: 23
122: content: >-f<, type: bare string, line: 23
123: content: >/v/dir/dest1/cp1.txt<, type: bare string, line: 23
124: content: >&<, type: <ampersand>, line: 23
125: content: >&<, type: <ampersand>, line: 23
126: content: >test<, type: bare string, line: 23
127: content: >-f<, type: bare string, line: 23
128: content: >/v/dir/dest1/cp2.txt<, type: bare string, line: 23
129: content: >}<, type: <right brace>, line: 23
130: content: >'after cp cp1, cp2 do not exist in /v/dir/dest1'<, type: single quoted string, line: 23
131: content: >
<, type: <new line>, line: 23
132: content: >}<, type: <right brace>, line: 24
133: content: >
<, type: <new line>, line: 24
134: content: >function<, type: <function keyword>, line: 25
135: content: >test_dir_mv_1<, type: bare string, line: 25
136: content: >(<, type: <left paren>, line: 25
137: content: >)<, type: <right paren, line: 25
138: content: >{<, type: <left brace>, line: 25
139: content: >
<, type: <new line>, line: 25
140: content: >touch<, type: bare string, line: 26
141: content: >/v/dir/foo<, type: bare string, line: 26
142: content: >
<, type: <new line>, line: 26
143: content: >assert_exec<, type: bare string, line: 27
144: content: >{<, type: <left brace>, line: 27
145: content: >mv<, type: bare string, line: 27
146: content: >/v/dir/foo<, type: bare string, line: 27
147: content: >/v/dir/f9<, type: bare string, line: 27
148: content: >}<, type: <right brace>, line: 27
149: content: >'mv foo f9'<, type: single quoted string, line: 27
150: content: >
<, type: <new line>, line: 27
151: content: >assert_exec<, type: bare string, line: 28
152: content: >{<, type: <left brace>, line: 28
153: content: >test<, type: bare string, line: 28
154: content: >-f<, type: bare string, line: 28
155: content: >/v/dir/f9<, type: bare string, line: 28
156: content: >}<, type: <right brace>, line: 28
157: content: >'f9 does not exist after mv'<, type: single quoted string, line: 28
158: content: >
<, type: <new line>, line: 28
159: content: >}<, type: <right brace>, line: 29
160: content: >
<, type: <new line>, line: 29
161: content: >function<, type: <function keyword>, line: 30
162: content: >test_dir_mv_to_dest2_folder<, type: bare string, line: 30
163: content: >(<, type: <left paren>, line: 30
164: content: >)<, type: <right paren, line: 30
165: content: >{<, type: <left brace>, line: 30
166: content: >
<, type: <new line>, line: 30
167: content: >touch<, type: bare string, line: 31
168: content: >/v/dir/foo<, type: bare string, line: 31
169: content: >;<, type: <semicolon>, line: 31
170: content: >mkdir<, type: bare string, line: 31
171: content: >/v/dir/dest2<, type: bare string, line: 31
172: content: >
<, type: <new line>, line: 31
173: content: >assert_exec<, type: bare string, line: 32
174: content: >{<, type: <left brace>, line: 32
175: content: >mv<, type: bare string, line: 32
176: content: >/v/dir/foo<, type: bare string, line: 32
177: content: >/v/dir/dest2<, type: bare string, line: 32
178: content: >}<, type: <right brace>, line: 32
179: content: >'mv foo dest2/'<, type: single quoted string, line: 32
180: content: >
<, type: <new line>, line: 32
181: content: >assert_exec<, type: bare string, line: 33
182: content: >{<, type: <left brace>, line: 33
183: content: >test<, type: bare string, line: 33
184: content: >-f<, type: bare string, line: 33
185: content: >/v/dir/dest2/foo<, type: bare string, line: 33
186: content: >}<, type: <right brace>, line: 33
187: content: >'dest2/foo does not exist after mv'<, type: single quoted string, line: 33
188: content: >
<, type: <new line>, line: 33
189: content: >}<, type: <right brace>, line: 34
190: content: >
<, type: <new line>, line: 34
191: content: >function<, type: <function keyword>, line: 35
192: content: >test_dir_mv_many_to_dest3<, type: bare string, line: 35
193: content: >(<, type: <left paren>, line: 35
194: content: >)<, type: <right paren, line: 35
195: content: >{<, type: <left brace>, line: 35
196: content: >
<, type: <new line>, line: 35
197: content: >touch<, type: bare string, line: 36
198: content: >/v/dir/foo<, type: bare string, line: 36
199: content: >/v/dir/bar<, type: bare string, line: 36
200: content: >/v/dir/baz<, type: bare string, line: 36
201: content: >;<, type: <semicolon>, line: 36
202: content: >mkdir<, type: bare string, line: 36
203: content: >/v/dir/dest3<, type: bare string, line: 36
204: content: >
<, type: <new line>, line: 36
205: content: >assert_exec<, type: bare string, line: 37
206: content: >{<, type: <left brace>, line: 37
207: content: >mv<, type: bare string, line: 37
208: content: >/v/dir/foo<, type: bare string, line: 37
209: content: >/v/dir/bar<, type: bare string, line: 37
210: content: >/v/dir/baz<, type: bare string, line: 37
211: content: >/v/dir/dest3<, type: bare string, line: 37
212: content: >}<, type: <right brace>, line: 37
213: content: >'mv foo bar baz dest3/'<, type: single quoted string, line: 37
214: content: >
<, type: <new line>, line: 37
215: content: >assert_exec<, type: bare string, line: 38
216: content: >{<, type: <left brace>, line: 38
217: content: >test<, type: bare string, line: 38
218: content: >-f<, type: bare string, line: 38
219: content: >/v/dir/dest3/foo<, type: bare string, line: 38
220: content: >&<, type: <ampersand>, line: 38
221: content: >&<, type: <ampersand>, line: 38
222: content: >test<, type: bare string, line: 38
223: content: >-f<, type: bare string, line: 38
224: content: >/v/dir/dest3/bar<, type: bare string, line: 38
225: content: >&<, type: <ampersand>, line: 38
226: content: >&<, type: <ampersand>, line: 38
227: content: >test<, type: bare string, line: 38
228: content: >-f<, type: bare string, line: 38
229: content: >/v/dir/dest3/baz<, type: bare string, line: 38
230: content: >}<, type: <right brace>, line: 38
231: content: >'dest3/{foo,bar,baz} one did not exist after mv'<, type: single quoted string, line: 38
232: content: >
<, type: <new line>, line: 38
233: content: >}<, type: <right brace>, line: 39
234: content: >
<, type: <new line>, line: 39
235: content: >function<, type: <function keyword>, line: 40
236: content: >test_dir_cp_one_from_folder_to_dot<, type: bare string, line: 40
237: content: >(<, type: <left paren>, line: 40
238: content: >)<, type: <right paren, line: 40
239: content: >{<, type: <left brace>, line: 40
240: content: >
<, type: <new line>, line: 40
241: content: >mkdir<, type: bare string, line: 41
242: content: >/v/dir/dest4<, type: bare string, line: 41
243: content: >;<, type: <semicolon>, line: 41
244: content: >touch<, type: bare string, line: 41
245: content: >/v/dir/dest4/yum<, type: bare string, line: 41
246: content: >
<, type: <new line>, line: 41
247: content: >assert_exec<, type: bare string, line: 42
248: content: >{<, type: <left brace>, line: 42
249: content: >(<, type: <left paren>, line: 42
250: content: >cd<, type: bare string, line: 42
251: content: >/v/dir<, type: bare string, line: 42
252: content: >;<, type: <semicolon>, line: 42
253: content: >cp<, type: bare string, line: 42
254: content: >dest4/yum<, type: bare string, line: 42
255: content: >.<, type: bare string, line: 42
256: content: >)<, type: <right paren, line: 42
257: content: >}<, type: <right brace>, line: 42
258: content: >'attempts to cp dest4/yum .'<, type: single quoted string, line: 42
259: content: >
<, type: <new line>, line: 42
260: content: >assert_exec<, type: bare string, line: 43
261: content: >{<, type: <left brace>, line: 43
262: content: >test<, type: bare string, line: 43
263: content: >-f<, type: bare string, line: 43
264: content: >/v/dir/yum<, type: bare string, line: 43
265: content: >}<, type: <right brace>, line: 43
266: content: >'/v/dir/yum does not exist'<, type: single quoted string, line: 43
267: content: >
<, type: <new line>, line: 43
268: content: >}<, type: <right brace>, line: 44
269: content: >
<, type: <new line>, line: 44
270: content: >function<, type: <function keyword>, line: 45
271: content: >test_dir_cp_2_files_to_child_dir<, type: bare string, line: 45
272: content: >(<, type: <left paren>, line: 45
273: content: >)<, type: <right paren, line: 45
274: content: >{<, type: <left brace>, line: 45
275: content: >
<, type: <new line>, line: 45
276: content: >mkdir<, type: bare string, line: 46
277: content: >/v/dir/d4<, type: bare string, line: 46
278: content: >;<, type: <semicolon>, line: 46
279: content: >touch<, type: bare string, line: 46
280: content: >/v/dir/foo<, type: bare string, line: 46
281: content: >/v/dir/bar<, type: bare string, line: 46
282: content: >
<, type: <new line>, line: 46
283: content: >assert_exec<, type: bare string, line: 47
284: content: >{<, type: <left brace>, line: 47
285: content: >cp<, type: bare string, line: 47
286: content: >/v/dir/foo<, type: bare string, line: 47
287: content: >/v/dir/bar<, type: bare string, line: 47
288: content: >/v/dir/d4<, type: bare string, line: 47
289: content: >}<, type: <right brace>, line: 47
290: content: >'could not cp foo, bar to d4'<, type: single quoted string, line: 47
291: content: >
<, type: <new line>, line: 47
292: content: >assert_exec<, type: bare string, line: 48
293: content: >{<, type: <left brace>, line: 48
294: content: >test<, type: bare string, line: 48
295: content: >-f<, type: bare string, line: 48
296: content: >/v/dir/d4/foo<, type: bare string, line: 48
297: content: >&<, type: <ampersand>, line: 48
298: content: >&<, type: <ampersand>, line: 48
299: content: >test<, type: bare string, line: 48
300: content: >-f<, type: bare string, line: 48
301: content: >/v/dir/d4/foo<, type: bare string, line: 48
302: content: >}<, type: <right brace>, line: 48
303: content: >'d4/foo,bar did exist after cp'<, type: single quoted string, line: 48
304: content: >
<, type: <new line>, line: 48
305: content: >}<, type: <right brace>, line: 49
306: content: >
<, type: <new line>, line: 49
307: content: >function<, type: <function keyword>, line: 50
308: content: >test_dir_cp_to_sibling_folder<, type: bare string, line: 50
309: content: >(<, type: <left paren>, line: 50
310: content: >)<, type: <right paren, line: 50
311: content: >{<, type: <left brace>, line: 50
312: content: >
<, type: <new line>, line: 50
313: content: >mkdir<, type: bare string, line: 51
314: content: >/v/dir/s5<, type: bare string, line: 51
315: content: >/v/dir/d5<, type: bare string, line: 51
316: content: >;<, type: <semicolon>, line: 51
317: content: >touch<, type: bare string, line: 51
318: content: >/v/dir/s5/abc<, type: bare string, line: 51
319: content: >/v/dir/s5/def<, type: bare string, line: 51
320: content: >
<, type: <new line>, line: 51
321: content: >assert_exec<, type: bare string, line: 52
322: content: >{<, type: <left brace>, line: 52
323: content: >(<, type: <left paren>, line: 52
324: content: >cd<, type: bare string, line: 52
325: content: >/v/dir/s5<, type: bare string, line: 52
326: content: >;<, type: <semicolon>, line: 52
327: content: >cp<, type: bare string, line: 52
328: content: >abc<, type: bare string, line: 52
329: content: >def<, type: bare string, line: 52
330: content: >../d5<, type: bare string, line: 52
331: content: >)<, type: <right paren, line: 52
332: content: >}<, type: <right brace>, line: 52
333: content: >'could not copy abc, def to sibling d5'<, type: single quoted string, line: 52
334: content: >
<, type: <new line>, line: 52
335: content: >assert_exec<, type: bare string, line: 53
336: content: >{<, type: <left brace>, line: 53
337: content: >(<, type: <left paren>, line: 53
338: content: >cd<, type: bare string, line: 53
339: content: >/v/dir/d5<, type: bare string, line: 53
340: content: >;<, type: <semicolon>, line: 53
341: content: >test<, type: bare string, line: 53
342: content: >-f<, type: bare string, line: 53
343: content: >abc<, type: bare string, line: 53
344: content: >&<, type: <ampersand>, line: 53
345: content: >&<, type: <ampersand>, line: 53
346: content: >test<, type: bare string, line: 53
347: content: >-f<, type: bare string, line: 53
348: content: >def<, type: bare string, line: 53
349: content: >)<, type: <right paren, line: 53
350: content: >}<, type: <right brace>, line: 53
351: content: >'d5/abc,def do not exist after cp from s5'<, type: single quoted string, line: 53
352: content: >
<, type: <new line>, line: 53
353: content: >}<, type: <right brace>, line: 54
354: content: >
<, type: <new line>, line: 54
355: content: >function<, type: <function keyword>, line: 55
356: content: >test_cp_dot_blah_to_dot_dot_ram<, type: bare string, line: 55
357: content: >(<, type: <left paren>, line: 55
358: content: >)<, type: <right paren, line: 55
359: content: >{<, type: <left brace>, line: 55
360: content: >
<, type: <new line>, line: 55
361: content: >mkdir<, type: bare string, line: 56
362: content: >/v/dir/s6<, type: bare string, line: 56
363: content: >;<, type: <semicolon>, line: 56
364: content: >echo<, type: bare string, line: 56
365: content: >hello<, type: bare string, line: 56
366: content: >><, type: <gt>, line: 56
367: content: >/v/dir/s6/blah<, type: bare string, line: 56
368: content: >
<, type: <new line>, line: 56
369: content: >assert_exec<, type: bare string, line: 57
370: content: >{<, type: <left brace>, line: 57
371: content: >(<, type: <left paren>, line: 57
372: content: >cd<, type: bare string, line: 57
373: content: >/v/dir/s6<, type: bare string, line: 57
374: content: >;<, type: <semicolon>, line: 57
375: content: >cp<, type: bare string, line: 57
376: content: >./blah<, type: bare string, line: 57
377: content: >./ram<, type: bare string, line: 57
378: content: >)<, type: <right paren, line: 57
379: content: >}<, type: <right brace>, line: 57
380: content: >'cannot cp ./blah to ./ram'<, type: single quoted string, line: 57
381: content: >
<, type: <new line>, line: 57
382: content: >assert_exec<, type: bare string, line: 58
383: content: >{<, type: <left brace>, line: 58
384: content: >assert_eq<, type: bare string, line: 58
385: content: >:<, type: <colon>, line: 58
386: content: >(<, type: <left paren>, line: 58
387: content: >cat<, type: bare string, line: 58
388: content: ><<, type: <lt>, line: 58
389: content: >/v/dir/s6/blah<, type: bare string, line: 58
390: content: >)<, type: <right paren, line: 58
391: content: >:<, type: <colon>, line: 58
392: content: >(<, type: <left paren>, line: 58
393: content: >cat<, type: bare string, line: 58
394: content: ><<, type: <lt>, line: 58
395: content: >/v/dir/s6/ram<, type: bare string, line: 58
396: content: >)<, type: <right paren, line: 58
397: content: >}<, type: <right brace>, line: 58
398: content: >'contents of s6/blah and s6/ram differ and should not'<, type: single quoted string, line: 58
399: content: >
<, type: <new line>, line: 58
400: content: >}<, type: <right brace>, line: 59
401: content: >function<, type: <function keyword>, line: 59
402: content: >test_dir_rm_one_object<, type: bare string, line: 59
403: content: >(<, type: <left paren>, line: 59
404: content: >)<, type: <right paren, line: 59
405: content: >{<, type: <left brace>, line: 59
406: content: >
<, type: <new line>, line: 59
407: content: >mkdir<, type: bare string, line: 60
408: content: >/v/dir/re<, type: bare string, line: 60
409: content: >;<, type: <semicolon>, line: 60
410: content: >touch<, type: bare string, line: 60
411: content: >/v/dir/re/r1<, type: bare string, line: 60
412: content: >
<, type: <new line>, line: 60
413: content: >assert_exec<, type: bare string, line: 61
414: content: >{<, type: <left brace>, line: 61
415: content: >rm<, type: bare string, line: 61
416: content: >/v/dir/re/r1<, type: bare string, line: 61
417: content: >}<, type: <right brace>, line: 61
418: content: >'could not rm /v/dir/re/r1'<, type: single quoted string, line: 61
419: content: >
<, type: <new line>, line: 61
420: content: >assert_exec_false<, type: bare string, line: 62
421: content: >{<, type: <left brace>, line: 62
422: content: >test<, type: bare string, line: 62
423: content: >-f<, type: bare string, line: 62
424: content: >/v/dir/re/r1<, type: bare string, line: 62
425: content: >}<, type: <right brace>, line: 62
426: content: >'re/r1 still exists after rm'<, type: single quoted string, line: 62
427: content: >
<, type: <new line>, line: 62
428: content: >}<, type: <right brace>, line: 63
429: content: >
<, type: <new line>, line: 63
430: content: >function<, type: <function keyword>, line: 64
431: content: >test_dir_rm_2_objects<, type: bare string, line: 64
432: content: >(<, type: <left paren>, line: 64
433: content: >)<, type: <right paren, line: 64
434: content: >{<, type: <left brace>, line: 64
435: content: >
<, type: <new line>, line: 64
436: content: >mkdir<, type: bare string, line: 65
437: content: >/v/dir/re<, type: bare string, line: 65
438: content: >;<, type: <semicolon>, line: 65
439: content: >touch<, type: bare string, line: 65
440: content: >/v/dir/re/r2<, type: bare string, line: 65
441: content: >/v/dir/re/r3<, type: bare string, line: 65
442: content: >
<, type: <new line>, line: 65
443: content: >assert_exec<, type: bare string, line: 66
444: content: >{<, type: <left brace>, line: 66
445: content: >rm<, type: bare string, line: 66
446: content: >/v/dir/re/r2<, type: bare string, line: 66
447: content: >/v/dir/re/r3<, type: bare string, line: 66
448: content: >}<, type: <right brace>, line: 66
449: content: >'could not rm r2 and r3'<, type: single quoted string, line: 66
450: content: >
<, type: <new line>, line: 66
451: content: >assert_exec_false<, type: bare string, line: 67
452: content: >{<, type: <left brace>, line: 67
453: content: >test<, type: bare string, line: 67
454: content: >-f<, type: bare string, line: 67
455: content: >/v/dir/re/r2<, type: bare string, line: 67
456: content: >}<, type: <right brace>, line: 67
457: content: >'r2 still exists after rm'<, type: single quoted string, line: 67
458: content: >
<, type: <new line>, line: 67
459: content: >assert_exec_false<, type: bare string, line: 68
460: content: >{<, type: <left brace>, line: 68
461: content: >test<, type: bare string, line: 68
462: content: >-f<, type: bare string, line: 68
463: content: >/v/dir/re/r3<, type: bare string, line: 68
464: content: >}<, type: <right brace>, line: 68
465: content: >'r3 still exists after rm'<, type: single quoted string, line: 68
466: content: >
<, type: <new line>, line: 68
467: content: >}<, type: <right brace>, line: 69
468: content: ><, type: <EOF>, line: 69
469: content: ><, type: <EOF>, line: 69
