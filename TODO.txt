# TODO list for edit_buffer

1. (DONE) FIX moving past the beginning or end of the buffer
2. (DONE) Implement FileBuffer: subclass of Buffer 
  (DONE) initialize takes file name (from ARGV[0]
  (DONE) Implements save command
3. (DONE) move source files to lib/utils or ??
4. (DONE) Figure out cut, copy and paste map to ctrl_x, ctrl_c and ctrl_v
5. (DONE) Implement rudimentary snippet engine hash of keys to array of procs taking Buffer
6. (DONE) Concentrate on up/down line movements. Esp. write specs around many configures of possible buffer configs.
7. (DONE) Implement Search and Reverse-Search.
8. (DONE) Implement Undo/Redo. Use type of CommandBuffer like Buffer (gap buffer)
9. Implement Keyboard Help. Use a special buffer that just speaks the actions.
10.(DONE) Implement Command REPL (aka vim)

Misc. 

Command REPL:
Use Viper::Readline, since takes one command at a time.
Parse single, multi-char commands:
  w <file name>: Writes Filename
  r <file name>: Reads a file into the current buffer at the cursor position.
  o <filename> Opens a new file into a new buffer
  rew, rew!: reads the file back into the buffer (creates a new FileBuffer)
  m: Do something with marked text
    m!<shell command>: send marked text to shell command stdin.
    
  r!<shell command>: inject stdout of shell command into current cursor in current buffer.
  :<line no>: Goto this line (or nearest if past end of buffer)